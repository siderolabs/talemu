// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.4
// source: specs/specs.proto

package specs

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ClusterStatusSpec defines cluster status of the emulator.
type ClusterStatusSpec struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Bootstrapped    bool                   `protobuf:"varint,1,opt,name=bootstrapped,proto3" json:"bootstrapped,omitempty"`
	ControlPlanes   uint32                 `protobuf:"varint,2,opt,name=control_planes,json=controlPlanes,proto3" json:"control_planes,omitempty"`
	Workers         uint32                 `protobuf:"varint,3,opt,name=workers,proto3" json:"workers,omitempty"`
	DenyEtcdMembers []string               `protobuf:"bytes,4,rep,name=deny_etcd_members,json=denyEtcdMembers,proto3" json:"deny_etcd_members,omitempty"`
	Kubeconfig      []byte                 `protobuf:"bytes,5,opt,name=kubeconfig,proto3" json:"kubeconfig,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ClusterStatusSpec) Reset() {
	*x = ClusterStatusSpec{}
	mi := &file_specs_specs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterStatusSpec) ProtoMessage() {}

func (x *ClusterStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_specs_specs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterStatusSpec.ProtoReflect.Descriptor instead.
func (*ClusterStatusSpec) Descriptor() ([]byte, []int) {
	return file_specs_specs_proto_rawDescGZIP(), []int{0}
}

func (x *ClusterStatusSpec) GetBootstrapped() bool {
	if x != nil {
		return x.Bootstrapped
	}
	return false
}

func (x *ClusterStatusSpec) GetControlPlanes() uint32 {
	if x != nil {
		return x.ControlPlanes
	}
	return 0
}

func (x *ClusterStatusSpec) GetWorkers() uint32 {
	if x != nil {
		return x.Workers
	}
	return 0
}

func (x *ClusterStatusSpec) GetDenyEtcdMembers() []string {
	if x != nil {
		return x.DenyEtcdMembers
	}
	return nil
}

func (x *ClusterStatusSpec) GetKubeconfig() []byte {
	if x != nil {
		return x.Kubeconfig
	}
	return nil
}

// MachineStatusSpec is an emulated machine status.
type MachineStatusSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addresses     []string               `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	EtcdMemberId  string                 `protobuf:"bytes,2,opt,name=etcd_member_id,json=etcdMemberId,proto3" json:"etcd_member_id,omitempty"`
	Hostname      string                 `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineStatusSpec) Reset() {
	*x = MachineStatusSpec{}
	mi := &file_specs_specs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineStatusSpec) ProtoMessage() {}

func (x *MachineStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_specs_specs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineStatusSpec.ProtoReflect.Descriptor instead.
func (*MachineStatusSpec) Descriptor() ([]byte, []int) {
	return file_specs_specs_proto_rawDescGZIP(), []int{1}
}

func (x *MachineStatusSpec) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *MachineStatusSpec) GetEtcdMemberId() string {
	if x != nil {
		return x.EtcdMemberId
	}
	return ""
}

func (x *MachineStatusSpec) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

// EventSinkStateSpec is defined per machine and resides in it's internal state
// describes which last version of a resource was reported to the events sink.
type EventSinkStateSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Versions      map[string]uint64      `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventSinkStateSpec) Reset() {
	*x = EventSinkStateSpec{}
	mi := &file_specs_specs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSinkStateSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSinkStateSpec) ProtoMessage() {}

func (x *EventSinkStateSpec) ProtoReflect() protoreflect.Message {
	mi := &file_specs_specs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSinkStateSpec.ProtoReflect.Descriptor instead.
func (*EventSinkStateSpec) Descriptor() ([]byte, []int) {
	return file_specs_specs_proto_rawDescGZIP(), []int{2}
}

func (x *EventSinkStateSpec) GetVersions() map[string]uint64 {
	if x != nil {
		return x.Versions
	}
	return nil
}

// VersionSpec keeps current talos version of the emulated Talos node.
type VersionSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Architecture  string                 `protobuf:"bytes,2,opt,name=architecture,proto3" json:"architecture,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionSpec) Reset() {
	*x = VersionSpec{}
	mi := &file_specs_specs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionSpec) ProtoMessage() {}

func (x *VersionSpec) ProtoReflect() protoreflect.Message {
	mi := &file_specs_specs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionSpec.ProtoReflect.Descriptor instead.
func (*VersionSpec) Descriptor() ([]byte, []int) {
	return file_specs_specs_proto_rawDescGZIP(), []int{3}
}

func (x *VersionSpec) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *VersionSpec) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

// ImageSpec is the last image used in the upgrade request.
type ImageSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Schematic     string                 `protobuf:"bytes,2,opt,name=schematic,proto3" json:"schematic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageSpec) Reset() {
	*x = ImageSpec{}
	mi := &file_specs_specs_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageSpec) ProtoMessage() {}

func (x *ImageSpec) ProtoReflect() protoreflect.Message {
	mi := &file_specs_specs_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageSpec.ProtoReflect.Descriptor instead.
func (*ImageSpec) Descriptor() ([]byte, []int) {
	return file_specs_specs_proto_rawDescGZIP(), []int{4}
}

func (x *ImageSpec) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ImageSpec) GetSchematic() string {
	if x != nil {
		return x.Schematic
	}
	return ""
}

// CachedImageSpec is the image pulled by the ImagePull API.
type CachedImageSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Digest        string                 `protobuf:"bytes,1,opt,name=digest,proto3" json:"digest,omitempty"`
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CachedImageSpec) Reset() {
	*x = CachedImageSpec{}
	mi := &file_specs_specs_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CachedImageSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CachedImageSpec) ProtoMessage() {}

func (x *CachedImageSpec) ProtoReflect() protoreflect.Message {
	mi := &file_specs_specs_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CachedImageSpec.ProtoReflect.Descriptor instead.
func (*CachedImageSpec) Descriptor() ([]byte, []int) {
	return file_specs_specs_proto_rawDescGZIP(), []int{5}
}

func (x *CachedImageSpec) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *CachedImageSpec) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// ServiceSpec is the fake service information.
type ServiceSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State         string                 `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Health        *ServiceSpec_Health    `protobuf:"bytes,3,opt,name=health,proto3" json:"health,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceSpec) Reset() {
	*x = ServiceSpec{}
	mi := &file_specs_specs_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceSpec) ProtoMessage() {}

func (x *ServiceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_specs_specs_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceSpec.ProtoReflect.Descriptor instead.
func (*ServiceSpec) Descriptor() ([]byte, []int) {
	return file_specs_specs_proto_rawDescGZIP(), []int{6}
}

func (x *ServiceSpec) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServiceSpec) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ServiceSpec) GetHealth() *ServiceSpec_Health {
	if x != nil {
		return x.Health
	}
	return nil
}

// RebootSpec keeps track of all reboots on the node.
type RebootSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Downtime      *durationpb.Duration   `protobuf:"bytes,1,opt,name=downtime,proto3" json:"downtime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RebootSpec) Reset() {
	*x = RebootSpec{}
	mi := &file_specs_specs_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebootSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebootSpec) ProtoMessage() {}

func (x *RebootSpec) ProtoReflect() protoreflect.Message {
	mi := &file_specs_specs_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebootSpec.ProtoReflect.Descriptor instead.
func (*RebootSpec) Descriptor() ([]byte, []int) {
	return file_specs_specs_proto_rawDescGZIP(), []int{7}
}

func (x *RebootSpec) GetDowntime() *durationpb.Duration {
	if x != nil {
		return x.Downtime
	}
	return nil
}

// RebootStatusSpec is generated for each reboot spec.
type RebootStatusSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RebootStatusSpec) Reset() {
	*x = RebootStatusSpec{}
	mi := &file_specs_specs_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebootStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebootStatusSpec) ProtoMessage() {}

func (x *RebootStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_specs_specs_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebootStatusSpec.ProtoReflect.Descriptor instead.
func (*RebootStatusSpec) Descriptor() ([]byte, []int) {
	return file_specs_specs_proto_rawDescGZIP(), []int{8}
}

// MachineSpec is stored in Omni in the infra provisioner state.
type MachineSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slot          int32                  `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Uuid          string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Schematic     string                 `protobuf:"bytes,3,opt,name=schematic,proto3" json:"schematic,omitempty"`
	TalosVersion  string                 `protobuf:"bytes,4,opt,name=talos_version,json=talosVersion,proto3" json:"talos_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineSpec) Reset() {
	*x = MachineSpec{}
	mi := &file_specs_specs_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineSpec) ProtoMessage() {}

func (x *MachineSpec) ProtoReflect() protoreflect.Message {
	mi := &file_specs_specs_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineSpec.ProtoReflect.Descriptor instead.
func (*MachineSpec) Descriptor() ([]byte, []int) {
	return file_specs_specs_proto_rawDescGZIP(), []int{9}
}

func (x *MachineSpec) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *MachineSpec) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MachineSpec) GetSchematic() string {
	if x != nil {
		return x.Schematic
	}
	return ""
}

func (x *MachineSpec) GetTalosVersion() string {
	if x != nil {
		return x.TalosVersion
	}
	return ""
}

// MachineTaskSpec is stored in the emulator state and the c.
type MachineTaskSpec struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Slot           int32                  `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Uuid           string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Schematic      string                 `protobuf:"bytes,3,opt,name=schematic,proto3" json:"schematic,omitempty"`
	TalosVersion   string                 `protobuf:"bytes,4,opt,name=talos_version,json=talosVersion,proto3" json:"talos_version,omitempty"`
	ConnectionArgs string                 `protobuf:"bytes,5,opt,name=connection_args,json=connectionArgs,proto3" json:"connection_args,omitempty"`
	SecureBoot     bool                   `protobuf:"varint,6,opt,name=secure_boot,json=secureBoot,proto3" json:"secure_boot,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MachineTaskSpec) Reset() {
	*x = MachineTaskSpec{}
	mi := &file_specs_specs_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineTaskSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineTaskSpec) ProtoMessage() {}

func (x *MachineTaskSpec) ProtoReflect() protoreflect.Message {
	mi := &file_specs_specs_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineTaskSpec.ProtoReflect.Descriptor instead.
func (*MachineTaskSpec) Descriptor() ([]byte, []int) {
	return file_specs_specs_proto_rawDescGZIP(), []int{10}
}

func (x *MachineTaskSpec) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *MachineTaskSpec) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MachineTaskSpec) GetSchematic() string {
	if x != nil {
		return x.Schematic
	}
	return ""
}

func (x *MachineTaskSpec) GetTalosVersion() string {
	if x != nil {
		return x.TalosVersion
	}
	return ""
}

func (x *MachineTaskSpec) GetConnectionArgs() string {
	if x != nil {
		return x.ConnectionArgs
	}
	return ""
}

func (x *MachineTaskSpec) GetSecureBoot() bool {
	if x != nil {
		return x.SecureBoot
	}
	return false
}

type ServiceSpec_Health struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Unknown       bool                   `protobuf:"varint,1,opt,name=unknown,proto3" json:"unknown,omitempty"`
	Healthy       bool                   `protobuf:"varint,2,opt,name=healthy,proto3" json:"healthy,omitempty"`
	LastMessage   string                 `protobuf:"bytes,3,opt,name=last_message,json=lastMessage,proto3" json:"last_message,omitempty"`
	LastChange    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_change,json=lastChange,proto3" json:"last_change,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceSpec_Health) Reset() {
	*x = ServiceSpec_Health{}
	mi := &file_specs_specs_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceSpec_Health) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceSpec_Health) ProtoMessage() {}

func (x *ServiceSpec_Health) ProtoReflect() protoreflect.Message {
	mi := &file_specs_specs_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceSpec_Health.ProtoReflect.Descriptor instead.
func (*ServiceSpec_Health) Descriptor() ([]byte, []int) {
	return file_specs_specs_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ServiceSpec_Health) GetUnknown() bool {
	if x != nil {
		return x.Unknown
	}
	return false
}

func (x *ServiceSpec_Health) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *ServiceSpec_Health) GetLastMessage() string {
	if x != nil {
		return x.LastMessage
	}
	return ""
}

func (x *ServiceSpec_Health) GetLastChange() *timestamppb.Timestamp {
	if x != nil {
		return x.LastChange
	}
	return nil
}

var File_specs_specs_proto protoreflect.FileDescriptor

const file_specs_specs_proto_rawDesc = "" +
	"\n" +
	"\x11specs/specs.proto\x12\bemuspecs\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\"\xc4\x01\n" +
	"\x11ClusterStatusSpec\x12\"\n" +
	"\fbootstrapped\x18\x01 \x01(\bR\fbootstrapped\x12%\n" +
	"\x0econtrol_planes\x18\x02 \x01(\rR\rcontrolPlanes\x12\x18\n" +
	"\aworkers\x18\x03 \x01(\rR\aworkers\x12*\n" +
	"\x11deny_etcd_members\x18\x04 \x03(\tR\x0fdenyEtcdMembers\x12\x1e\n" +
	"\n" +
	"kubeconfig\x18\x05 \x01(\fR\n" +
	"kubeconfig\"s\n" +
	"\x11MachineStatusSpec\x12\x1c\n" +
	"\taddresses\x18\x01 \x03(\tR\taddresses\x12$\n" +
	"\x0eetcd_member_id\x18\x02 \x01(\tR\fetcdMemberId\x12\x1a\n" +
	"\bhostname\x18\x03 \x01(\tR\bhostname\"\x99\x01\n" +
	"\x12EventSinkStateSpec\x12F\n" +
	"\bversions\x18\x01 \x03(\v2*.emuspecs.EventSinkStateSpec.VersionsEntryR\bversions\x1a;\n" +
	"\rVersionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\"G\n" +
	"\vVersionSpec\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\"\n" +
	"\farchitecture\x18\x02 \x01(\tR\farchitecture\"C\n" +
	"\tImageSpec\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x1c\n" +
	"\tschematic\x18\x02 \x01(\tR\tschematic\"=\n" +
	"\x0fCachedImageSpec\x12\x16\n" +
	"\x06digest\x18\x01 \x01(\tR\x06digest\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x03R\x04size\"\x88\x02\n" +
	"\vServiceSpec\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05state\x18\x02 \x01(\tR\x05state\x124\n" +
	"\x06health\x18\x03 \x01(\v2\x1c.emuspecs.ServiceSpec.HealthR\x06health\x1a\x9c\x01\n" +
	"\x06Health\x12\x18\n" +
	"\aunknown\x18\x01 \x01(\bR\aunknown\x12\x18\n" +
	"\ahealthy\x18\x02 \x01(\bR\ahealthy\x12!\n" +
	"\flast_message\x18\x03 \x01(\tR\vlastMessage\x12;\n" +
	"\vlast_change\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"lastChange\"C\n" +
	"\n" +
	"RebootSpec\x125\n" +
	"\bdowntime\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\bdowntime\"\x12\n" +
	"\x10RebootStatusSpec\"x\n" +
	"\vMachineSpec\x12\x12\n" +
	"\x04slot\x18\x01 \x01(\x05R\x04slot\x12\x12\n" +
	"\x04uuid\x18\x02 \x01(\tR\x04uuid\x12\x1c\n" +
	"\tschematic\x18\x03 \x01(\tR\tschematic\x12#\n" +
	"\rtalos_version\x18\x04 \x01(\tR\ftalosVersion\"\xc6\x01\n" +
	"\x0fMachineTaskSpec\x12\x12\n" +
	"\x04slot\x18\x01 \x01(\x05R\x04slot\x12\x12\n" +
	"\x04uuid\x18\x02 \x01(\tR\x04uuid\x12\x1c\n" +
	"\tschematic\x18\x03 \x01(\tR\tschematic\x12#\n" +
	"\rtalos_version\x18\x04 \x01(\tR\ftalosVersion\x12'\n" +
	"\x0fconnection_args\x18\x05 \x01(\tR\x0econnectionArgs\x12\x1f\n" +
	"\vsecure_boot\x18\x06 \x01(\bR\n" +
	"secureBootB(Z&github.com/siderolabs/talemu/api/specsb\x06proto3"

var (
	file_specs_specs_proto_rawDescOnce sync.Once
	file_specs_specs_proto_rawDescData []byte
)

func file_specs_specs_proto_rawDescGZIP() []byte {
	file_specs_specs_proto_rawDescOnce.Do(func() {
		file_specs_specs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_specs_specs_proto_rawDesc), len(file_specs_specs_proto_rawDesc)))
	})
	return file_specs_specs_proto_rawDescData
}

var file_specs_specs_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_specs_specs_proto_goTypes = []any{
	(*ClusterStatusSpec)(nil),     // 0: emuspecs.ClusterStatusSpec
	(*MachineStatusSpec)(nil),     // 1: emuspecs.MachineStatusSpec
	(*EventSinkStateSpec)(nil),    // 2: emuspecs.EventSinkStateSpec
	(*VersionSpec)(nil),           // 3: emuspecs.VersionSpec
	(*ImageSpec)(nil),             // 4: emuspecs.ImageSpec
	(*CachedImageSpec)(nil),       // 5: emuspecs.CachedImageSpec
	(*ServiceSpec)(nil),           // 6: emuspecs.ServiceSpec
	(*RebootSpec)(nil),            // 7: emuspecs.RebootSpec
	(*RebootStatusSpec)(nil),      // 8: emuspecs.RebootStatusSpec
	(*MachineSpec)(nil),           // 9: emuspecs.MachineSpec
	(*MachineTaskSpec)(nil),       // 10: emuspecs.MachineTaskSpec
	nil,                           // 11: emuspecs.EventSinkStateSpec.VersionsEntry
	(*ServiceSpec_Health)(nil),    // 12: emuspecs.ServiceSpec.Health
	(*durationpb.Duration)(nil),   // 13: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil), // 14: google.protobuf.Timestamp
}
var file_specs_specs_proto_depIdxs = []int32{
	11, // 0: emuspecs.EventSinkStateSpec.versions:type_name -> emuspecs.EventSinkStateSpec.VersionsEntry
	12, // 1: emuspecs.ServiceSpec.health:type_name -> emuspecs.ServiceSpec.Health
	13, // 2: emuspecs.RebootSpec.downtime:type_name -> google.protobuf.Duration
	14, // 3: emuspecs.ServiceSpec.Health.last_change:type_name -> google.protobuf.Timestamp
	4,  // [4:4] is the sub-list for method output_type
	4,  // [4:4] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_specs_specs_proto_init() }
func file_specs_specs_proto_init() {
	if File_specs_specs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_specs_specs_proto_rawDesc), len(file_specs_specs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_specs_specs_proto_goTypes,
		DependencyIndexes: file_specs_specs_proto_depIdxs,
		MessageInfos:      file_specs_specs_proto_msgTypes,
	}.Build()
	File_specs_specs_proto = out.File
	file_specs_specs_proto_goTypes = nil
	file_specs_specs_proto_depIdxs = nil
}
